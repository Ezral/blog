[{"title":"Dataquest Guided Project","permalink":"https://ezral.net/Guided-project-Mobile-App-for-lottery-addiction.html","link":"https://ezral.net/Guided-project-Mobile-App-for-lottery-addiction.html","date":"2020-06-30T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>This is another guided project from <a href=\"dataquest.io\">Dataquest</a> that I recently completed.\nIt’s not really data heave like the usual ones because it’s focusing on probability.\nI particularly enjoy this one where I learned how to write math formula using TeX.\nSomething different that I tried is using the anchor on the notebook page using the header which turned out to be real simple.\nFor example,</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[Click here](#Anchor)\n</code></pre></div></div>\n<p>Will bring you to your <code class=\"language-plaintext highlighter-rouge\"># Anchor</code> header. Note that you need to remove the whitespace. If you have space on your anchor, then replace them with <code class=\"language-plaintext highlighter-rouge\">\"-\"</code>.</p>\n\n<h2 id=\"click-here-to-view-the-notebook\">Click <a href=\"https://nbviewer.jupyter.org/github/Ezral/guided_project/blob/master/Mobile%20App%20for%20Lottery%20Addiction.ipynb\">here</a> to view the notebook.</h2>","excerpt":"This is another guided project from Dataquest that I recently completed.\nIt’s not really data heave like the usual ones because it’s focusing on probability.\nI particularly enjoy this one where I learned how to write math formula using TeX.\nSomething different that I tried is using the anchor on the notebook page using the header which turned out to be real simple.\nFor example,\n[Click here](#Anchor)\n\nWill bring you to your # Anchor header. Note that you need to remove the whitespace. If you have space on your anchor, then replace them with \"-\".","languages":null,"categories":["data"],"tags":["data"]},{"title":"Reviewing ECG","permalink":"https://ezral.net/Reviewing-ECG.html","link":"https://ezral.net/Reviewing-ECG.html","date":"2020-06-26T00:00:00+00:00","modified":"2020-06-28T07:17:01+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>Being able to read ECG was one of my main goals in the late years of medschool. I ended up graduating from not being really comfortable reading them. I’d be able to spot things like myocardial infarction but I wasn’t really able to properly read them. There’s this one time where a senior doctor would explain the reading of a strip and I was sort of lost. That was the turning point that led me to doing a self study which involved hours of youtube and reading and doing exercises.</p>\n\n<p>I’d strongly recommend the following resources to those wanting to learn to interpret ECGs:</p>\n<ul>\n  <li>Watch all ECG  videos in <a href=\"https://www.youtube.com/user/Touzeau123/videos\">Touzeau123’s youtube channel</a>,</li>\n  <li>Go through <a href=\"https://litfl.com/ecg-library/\">ECG resources in LITFL</a>,</li>\n  <li>Finish all 200 ECG problems in <a href=\"https://www.amazon.com/ECGs-Emergency-Physician-Amal-Mattu/dp/0727916548\">Amal Mattu’s book</a>.</li>\n</ul>\n\n<p>These will definitely be enough for anyone to master the basics of ECG. If you want to go further however, there’s this post written by <a href=\"https://www.roshreview.com/author/sweisenfeld/\">Shari Weisenfeld, MD</a> that outlines a very detailed <a href=\"https://www.roshreview.com/blog/study-strategies/how-an-internist-learned-to-read-ekgs-better-than-a-cardiologist/\">ECG self-study program</a> that you can follow to get from scratch to an advanced level.</p>\n\n<hr />","excerpt":"Being able to read ECG was one of my main goals in the late years of medschool. I ended up graduating from not being really comfortable reading them. I’d be able to spot things like myocardial infarction but I wasn’t really able to properly read them. There’s this one time where a senior doctor would explain the reading of a strip and I was sort of lost. That was the turning point that led me to doing a self study which involved hours of youtube and reading and doing exercises.","languages":null,"categories":["medical"],"tags":["ecg","pin"]},{"title":"Proportion of Doctors in Indonesia","permalink":"https://ezral.net/Proportion-of-Doctors-in-Indonesia.html","link":"https://ezral.net/Proportion-of-Doctors-in-Indonesia.html","date":"2020-06-26T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p><img src=\"/assets/img/img2.png\" alt=\"doc_proportion\" /></p>\n\n<hr />","excerpt":"","languages":null,"categories":["data"],"tags":["data"]},{"title":"Almace Scaffolding Quick Post","permalink":"https://ezral.net/Almace-Scaffolding-quick-post.html","link":"https://ezral.net/Almace-Scaffolding-quick-post.html","date":"2020-06-25T00:00:00+00:00","modified":"2020-06-27T05:34:24+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>This is a snippet I use to quickly create a post draft for Almace Scaffolding from command line.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"k\">function </span>blog <span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nb\">local </span><span class=\"nv\">DATE</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +<span class=\"s2\">\"%Y-%m-%d\"</span><span class=\"si\">)</span><span class=\"p\">;</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$3</span>\n    <span class=\"nb\">touch</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"---</span><span class=\"se\">\\n</span><span class=\"s2\">layout: post</span><span class=\"se\">\\n</span><span class=\"s2\">title: </span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"p\">//-/ </span><span class=\"k\">}</span><span class=\"se\">\\n</span><span class=\"s2\">category: </span><span class=\"nv\">$1</span><span class=\"se\">\\n</span><span class=\"s2\">tags: </span><span class=\"nv\">$2</span><span class=\"se\">\\n</span><span class=\"s2\">---</span><span class=\"se\">\\n\\n</span><span class=\"s2\">write here</span><span class=\"se\">\\n\\n</span><span class=\"s2\">---\"</span> <span class=\"o\">&gt;</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"nv\">$DATE</span><span class=\"s2\">-</span><span class=\"nv\">$3</span><span class=\"s2\">.md has been created in ~/github_repo/my-site/_app/_posts/</span><span class=\"nv\">$1</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">cd</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>\n    atom /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And since I have to generate all the html content for every time I make any changes, I wrote a function to <code class=\"language-plaintext highlighter-rouge\">grunt build</code>, re-adding CNAME file that gets deleted by grunt and <code class=\"language-plaintext highlighter-rouge\">git add</code> followed by <code class=\"language-plaintext highlighter-rouge\">git status</code> to compile all those steps into one line.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"k\">function </span>buildblog<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> /Users/user/github_repo/my-site/<span class=\"p\">;</span>\n    grunt <span class=\"nt\">--force</span> build<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"site.com\"</span> <span class=\"o\">&gt;</span> temp | <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> temp /Users/user/github_repo/my-site/docs/CNAME<span class=\"p\">;</span>\n    <span class=\"nb\">rm </span>temp<span class=\"p\">;</span>\n    git add docs/<span class=\"k\">*</span> _app/<span class=\"k\">*</span><span class=\"p\">;</span>\n    git status<span class=\"p\">;</span>\n    git commit <span class=\"nt\">-m</span> <span class=\"nv\">$1</span><span class=\"p\">;</span>\n    git push<span class=\"p\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And that’s how I get them posts published.</p>\n\n<hr />","excerpt":"This is a snippet I use to quickly create a post draft for Almace Scaffolding from command line.","languages":null,"categories":["news"],"tags":["comp"]},{"title":"Doctor density per 1,000 population","permalink":"https://ezral.net/doctor-proportion.html","link":"https://ezral.net/doctor-proportion.html","date":"2020-06-24T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p><img src=\"/assets/img/img1.png\" alt=\"doc_proportion\" /></p>\n\n<p>This is a bar chart showing doctor density for each province in Indonesia with color gradient describing the land km square of the province.</p>\n\n<blockquote>\n  <p>Available statistics show that over 45% of WHO Member States report to have less than 1 physician\nper 1,000 population.\n— <a href=\"https://www.who.int/gho/health_workforce/physicians_density/en/\">World Health Organization</a></p>\n</blockquote>\n\n<hr />","excerpt":"","languages":null,"categories":["data"],"tags":["data","pin"]},{"title":"Dataquest Guided Project","permalink":"https://ezral.net/data-quest-guided-project.html","link":"https://ezral.net/data-quest-guided-project.html","date":"2020-06-24T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>From a colleague’s remark regarding data science course, I was somehow encouraged to venture into doing some lessons on <a href=\"https://dataquest.io\">Dataquest</a>. Little did I know that I was going to like it this much.\nI figure I’d keep one of the first Dataquest guided projects that I completed in this blog. This one is about <a href=\"https://nbviewer.jupyter.org/urls/community.dataquest.io/uploads/short-url/6dRDpeZHZCHxZUwyDrGKo3DMrcv.ipynb\">Star Wars movie survey</a>.</p>\n\n<hr />","excerpt":"From a colleague’s remark regarding data science course, I was somehow encouraged to venture into doing some lessons on Dataquest. Little did I know that I was going to like it this much.\nI figure I’d keep one of the first Dataquest guided projects that I completed in this blog. This one is about Star Wars movie survey.","languages":null,"categories":["data"],"tags":["data"]},{"title":"Setting up ZSH","permalink":"https://ezral.net/setting-up-zsh.html","link":"https://ezral.net/setting-up-zsh.html","date":"2020-06-23T00:00:00+00:00","modified":"2020-06-27T05:34:24+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>MacOSX Catalina 15.5 update changed the Terminal emulator default shell from bash to zsh and I figure it’s the right time to get to know zsh. Here’s how I setup my zsh after doing a quick search on the web.</p>\n\n<p><strong>1. Installing oh-my-zsh</strong></p>\n\n<p>I installed <em><a href=\"https://github.com/ohmyzsh/ohmyzsh\">oh-my-zsh</a></em> via curl:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>sh <span class=\"nt\">-c</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>curl <span class=\"nt\">-fsSL</span> https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class=\"si\">)</span><span class=\"s2\">\"</span></code></pre></figure>\n\n<p>Oh-my-zsh will write its default <code class=\"language-plaintext highlighter-rouge\">.zshrc</code> onto ours and that will makes things easier to customize.</p>\n\n<hr />\n\n<p><strong>2. Setting up oh-y-zsh theme</strong></p>\n\n<p>There are plenty of great looking themes but I like this clean looking <a href=\"https://github.com/denysdovhan/spaceship-prompt\">spaceship</a> theme. Clone the repo to install:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/denysdovhan/spaceship-prompt.git <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship-prompt\"</span></code></pre></figure>\n\n<p>Then symlink <code class=\"language-plaintext highlighter-rouge\">spaceship.zsh-theme</code> to the oh-my-zsh custom themes directory:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span><span class=\"nb\">ln</span> <span class=\"nt\">-s</span> <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship-prompt/spaceship.zsh-theme\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship.zsh-theme\"</span></code></pre></figure>\n\n<p>And set <code class=\"language-plaintext highlighter-rouge\">ZSH_THEME=\"spaceship\"</code> in your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>. To set up the prompt, you can see the prompt options <a href=\"https://denysdovhan.com/spaceship-prompt/docs/Options.htmlprompt\">here</a>. The setup I’m using in my <code class=\"language-plaintext highlighter-rouge\">.zshrc</code> is like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">SPACESHIP_USER_SHOW</span><span class=\"o\">=</span>always\n<span class=\"nv\">SPACESHIP_USER_COLOR</span><span class=\"o\">=</span>green\n<span class=\"nv\">SPACESHIP_USER_SUFFIX</span><span class=\"o\">=</span><span class=\"s1\">' '</span>\n<span class=\"nv\">SPACESHIP_HOST_PREFIX</span><span class=\"o\">=</span><span class=\"s2\">\"@\"</span>\n<span class=\"nv\">SPACESHIP_HOST_SUFFIX</span><span class=\"o\">=</span><span class=\"s2\">\" \"</span></code></pre></figure>\n\n<hr />\n\n<p><strong>3. Installing font</strong></p>\n\n<p>I used <a href=\"https://github.com/tonsky/FiraCode\">FiraCode</a>. Installation instructions can be found in FiraCode <a href=\"https://github.com/tonsky/FiraCode/wiki/Installing\">wiki</a>.\nHomebrew offers a quick way to do it:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>brew tap homebrew/cask-fonts\n<span class=\"nv\">$ </span>brew cask <span class=\"nb\">install </span>font-fira-code</code></pre></figure>\n\n<p>Once installed, select to use the font in your Terminal emulator preference.</p>\n\n<hr />\n\n<p><strong>4. Setting up oh-my-zsh plugins</strong></p>\n\n<p>To install zsh-syntax-highlighting in your <code class=\"language-plaintext highlighter-rouge\">~/.zshrcs</code>, first clone the repo:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"nv\">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting</code></pre></figure>\n\n<p>Then, enable syntax highlighting in the current interactive shell by adding the line below:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span><span class=\"nb\">source</span> /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></pre></figure>\n\n<p>Note the <code class=\"language-plaintext highlighter-rouge\">source</code> command must be <strong>at the end</strong> of <code class=\"language-plaintext highlighter-rouge\">~/.zshrc</code>. Next, clone zsh-syntax-suggestion repo as well to install it:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/zsh-users/zsh-autosuggestions.git <span class=\"nv\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</code></pre></figure>\n\n<p>To enable it we need to add the plugin in your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">plugins</span><span class=\"o\">=(</span>git zsh-autosuggestions<span class=\"o\">)</span></code></pre></figure>\n\n<hr />\n\n<p><strong>5. Organising aliases</strong></p>\n\n<p>If you have your aliases already setup in bash or other shell, you can just copy them directly to your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>, or place them in a file with <code class=\"language-plaintext highlighter-rouge\">.zsh</code> extension in the <code class=\"language-plaintext highlighter-rouge\">~/.oh-my-zsh/custom/</code> directory. The latter looks more organised in my opinion.</p>\n\n<hr />\n\n<p><strong>6. Add Conda setup</strong></p>\n\n<p>If you’re like me and you’re using Conda for your jupyter notebook, you need to make sure that you put the following script into your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"> <span class=\"o\">&gt;&gt;&gt;</span> conda initialize <span class=\"o\">&gt;&gt;&gt;</span>\n <span class=\"o\">!!</span> Contents within this block are managed by <span class=\"s1\">'conda init'</span> <span class=\"o\">!!</span>\n<span class=\"nv\">__conda_setup</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"s1\">'/Users/user/opt/anaconda3/bin/conda'</span> <span class=\"s1\">'shell.zsh'</span> <span class=\"s1\">'hook'</span> 2&gt; /dev/null<span class=\"si\">)</span><span class=\"s2\">\"</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$?</span> <span class=\"nt\">-eq</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"nv\">$__conda_setup</span><span class=\"s2\">\"</span>\n<span class=\"k\">else\n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"nb\">.</span> <span class=\"s2\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"~/opt/anaconda3/bin:</span><span class=\"nv\">$PATH</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi\nfi\n</span><span class=\"nb\">unset </span>__conda_setup\n <span class=\"o\">&lt;&lt;&lt;</span> conda initialize <span class=\"o\">&lt;&lt;&lt;</span></code></pre></figure>\n\n<p>To activate or deactivate your conda environment use the command <code class=\"language-plaintext highlighter-rouge\">conda activate</code> or <code class=\"language-plaintext highlighter-rouge\">conda deactivate</code> on your command prompt.</p>\n\n<hr />\n\n<p><strong>7. Colors for terminal</strong></p>\n\n<p>For color, I follow <a href=\"https://github.com/nathanbuchar/atom-one-dark-terminal/blob/master/COLORS\">atom one dark color</a> theme which I applied manually on my terminal preference. Here are the hex colors for both <em>One Dark</em> and <em>One Light</em> theme:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>One Dark                       One Light\n\nBlack:          1E2127        Black:          000000\nBright Black:   5C6370        Bright Black:   383A42\nRed:            E06C75        Red:            E45649\nBright Red:     E06C75        Bright Red:     E45649\nGreen:          98C379        Green:          50A14F\nBright Green:   98C379        Bright Green:   50A14F\nYellow:         D19A66        Yellow:         986801\nBright Yellow:  D19A66        Bright Yellow:  986801\nBlue:           61AFEF        Blue:           4078F2\nLight Blue:     61AFEF        Light Blue:     4078F2\nMagenta:        C678DD        Magenta:        A626A4\nLight Magenta:  C678DD        Light Magenta:  A626A4\nCyan:           56B6C2        Cyan:           0184BC\nLight Cyan:     56B6C2        Light Cyan:     0184BC\nWhite:          ABB2BF        White:          A0A1A7\nBright White:   FFFFFF        Bright White:   FFFFFF\nText:           ABB2BF        Text:           383A42\nBold Text:      ABB2BF        Bold Text:      A0A1A7\nSelection:      3A3F4B        Selection:      3A3F4B\nCursor:         5C6370        Cursor:         383A42\nBackground:     1E2127        Background:     F9F9F9\n</code></pre></div></div>\n\n<p>The background color I used also follows the One Dark black color which hex is <code class=\"language-plaintext highlighter-rouge\">1E2127</code>. You can change it to <code class=\"language-plaintext highlighter-rouge\">FEFDF9</code> or <code class=\"language-plaintext highlighter-rouge\">FEF4EB</code> if you want a peach colored background.</p>\n\n<hr />\n\n<p>References</p>\n<ul>\n  <li><a href=\"https://github.com/ohmyzsh/ohmyzsh\">Oh-my-zsh</a></li>\n  <li><a href=\"https://denysdovhan.com/spaceship-prompt/\">Spaceship ZSH prompt</a></li>\n  <li><a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\">Zsh-syntax-highlighting</a></li>\n  <li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">Zsh-syntax-autosuggestion</a></li>\n  <li><a href=\"https://github.com/tonsky/FiraCode\">FiraCode font</a></li>\n  <li><a href=\"https://github.com/nathanbuchar/atom-one-dark-terminal\">Atom one dark for terminal</a></li>\n</ul>\n\n<hr />","excerpt":"MacOSX Catalina 15.5 update changed the Terminal emulator default shell from bash to zsh and I figure it’s the right time to get to know zsh. Here’s how I setup my zsh after doing a quick search on the web.","languages":null,"categories":["news"],"tags":["comp"]},{"title":"Air Medical Evacuation","permalink":"https://ezral.net/air-medical-evacuation.html","link":"https://ezral.net/air-medical-evacuation.html","date":"2020-06-22T00:00:00+00:00","modified":"2020-06-27T16:38:42+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"aldoni@yahoo.com"},"content":"<p>Although the term <strong>air medical evacuation</strong> covers many things¹, it’s most commonly known in Indonesia as air ambulance evacuation using privately chartered airplane with a special configuration. If you’re fortunate enough, you’d have enough fortune to spend to fly you to a center of medical excellence using this option.</p>\n\n<blockquote>\n  <p>¹ All means of air-lifting patient (rotary &amp; fixed wings) that includes commercial seated, commercial stretcher, air ambulance.</p>\n</blockquote>\n\n<p>Is it popular? It is an option for the wealthy and lucky few. The cost² can easily pays off your car instalments or your kid’s tuition.</p>\n\n<blockquote>\n  <p>² Air ambulance cost for Jakarta to Singapore sector between the year 2016 – 2017 can vary from USD <strong>13,000</strong> to <strong>26,000</strong> depending on complexity of medical condition, aircraft type, and origin of aircraft.</p>\n</blockquote>\n\n<hr />","excerpt":"Although the term air medical evacuation covers many things¹, it’s most commonly known in Indonesia as air ambulance evacuation using privately chartered airplane with a special configuration. If you’re fortunate enough, you’d have enough fortune to spend to fly you to a center of medical excellence using this option.","languages":null,"categories":["news"],"tags":["misc"]}]