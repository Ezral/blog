[{"title":"Picking up Brazilian jiu jitsu","permalink":"https://ezral.net/Brazilian-jiu-jitsu.html","link":"https://ezral.net/Brazilian-jiu-jitsu.html","date":"2020-07-11T00:00:00+00:00","modified":"2020-07-11T10:38:27+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>If you’ve never picked up any martial arts and you decided that you want to try one, maybe Brazilian jiu jitsu (BJJ) is for you.</p>\n\n<p>BJJ has been getting a lot more attention as mixed martial art is getting more and more popular on the planet.</p>\n\n<p>Being an art that focuses on ground techniques, BJJ doesn’t teach any striking techniques. It’s basically a form of grappling discipline that focuses on ground techniques with the intent of submitting or choking the opponent. The philosophy is to allow a person with smaller stature and physique overcome a larger and stronger foe.</p>\n\n<p>It even coined the nickname <em>the gentle art</em> which perfectly describes how someone can execute a smooth chain of movement in getting an opponent taken down or swept to being submitted by a joint lock, all utilising minimum amount of strength as opposed to knocking the opponent out using a full power punch or kick using striking martial arts.</p>\n\n<p>Its foundation is not heavily based on strength, speed, physical coordination and flexibility, making BJJ somewhat suitable for a person who has never receive any martial art training in life. This doesn’t mean that BJJ requires none of the aforementioned. But it’s true for BJJ that to some extent, the lack of physical attributes can be compensated by techniques.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/H%C3%A9lio_Gracie\">Hélio Gracie</a>, a prominent figure during the early chapters of BJJ, has been repeatedly mentioned in multiple resources as being somewhat smaller in size and having a relatively weak physical condition compared to his peers during his era in the 1930s. Interestingly, the limitation in his physical attributes became the reason of the development of BJJ which emphasised techniques over strength.</p>\n\n<p>So does this mean anybody can do it? This is <a href=\"https://graciebarra.com/\">Gracie Barra</a>’s tagline: <em>Jiu jitsu for everyone</em>. Gracie Barra is one of the biggest, if not the biggest chain of BJJ school in the world, that offers BJJ teaching to everyone from all ages and all walks of life. It does focus more on sport Jiu jitsu, but for those who are not a competitive athlete it still provides the benefit of a good physical exercise and a slight self-defence experience.</p>\n\n<p>Do I agree with the statement?  I say, everyone should give it a try. Even if there’s no intention to compete and the only goal is to get in shape, it’ll do the job. A regular session would normally be 1 to 1.5 hour long and consists of warm-ups, technique drill and rolling (or sparring) - this varies depending on the school.</p>\n\n<p>Does it really benefit someone who isn’t an aspiring BJJ athlete? Yes.</p>\n\n<p>To give a picture what the exercise is like, a set of warm-ups can be as the following (done continuously without any rest):</p>\n<blockquote>\n  <ul>\n    <li>20 jumping jacks</li>\n    <li>20 squats</li>\n    <li>20 pushups</li>\n    <li>20 arm stretches</li>\n    <li>20 lunges</li>\n    <li>20 pushups</li>\n    <li>20 arm stretches</li>\n    <li>20 sprawls</li>\n    <li>20 pushups</li>\n    <li>20 choke sit-ups</li>\n    <li>20 crunches x2</li>\n    <li>10 chin to chest</li>\n    <li>10 chin to shoulder</li>\n    <li>10 ear to shoulder</li>\n    <li>20 bridges</li>\n    <li>10 bridge to turtle</li>\n    <li>10 shift bases</li>\n    <li>10 leg crosses</li>\n    <li>10 technique stand-ups</li>\n    <li>6 fwd rolls</li>\n    <li>6 back rolls</li>\n    <li>6 shrimping</li>\n  </ul>\n</blockquote>\n\n<p>This, added with the technique drill and the rolls should get anyone in shape if done at a regular interval (of course diet plays a huge part as well).</p>\n\n<p>Since most of the schools out there give free first lesson, it’s possible to check out different places before making the decision on picking up BJJ.</p>\n\n<hr />","excerpt":"If you’ve never picked up any martial arts and you decided that you want to try one, maybe Brazilian jiu jitsu (BJJ) is for you.","languages":null,"categories":["news"],"tags":["misc","pin"]},{"title":"Parsing ICD-10-PCS XML","permalink":"https://ezral.net/Parsing-ICD10PCS-XML.html","link":"https://ezral.net/Parsing-ICD10PCS-XML.html","date":"2020-07-10T00:00:00+00:00","modified":"2020-07-10T08:46:01+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<h6 id=\"this-post-is-originally-written-on-this-jupyter-notebook-file\">This post is originally written on <a href=\"https://nbviewer.jupyter.org/github/Ezral/officedoc/blob/master/Parsing%20ICD-10-PCS%20Table%20XML.ipynb\">this jupyter notebook file</a></h6>\n\n<h2 id=\"background\">Background</h2>\n\n<p>The goal of this project is to parse ICD-10-PCS XML file into a CSV file that contains 2 columns, the 7 character code and the title (or medical name) with “@” separating each level title. For this project I’ll be using ICD-10-PCS 2020 which XML file <a href=\"https://www.cms.gov/Medicare/Coding/ICD10/Downloads/2020-ICD-10-PCS-Code-Tables.zip\">can be downloaded from CMS.gov</a>.</p>\n\n<p>I’ll be using etree package in Python to work this project out. And as usual, I’ll start with the table of content:</p>\n\n<h2 id=\"content\">Content</h2>\n<blockquote>\n  <ul>\n    <li><a href=\"#importing-the-packages\">Importing the packages</a></li>\n    <li><a href=\"#reading-the-XML-file\">Reading the XML file</a></li>\n    <li><a href=\"#parsing-the-nodes\">Parsing the nodes</a></li>\n    <li><a href=\"#conclusion\">Conclusion</a></li>\n  </ul>\n</blockquote>\n\n<hr />\n\n<h2 id=\"importing-packages\">Importing packages</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"c1\"># Importing packages\n</span><span class=\"kn\">import</span> <span class=\"nn\">xml.etree.ElementTree</span> <span class=\"k\">as</span> <span class=\"n\">ET</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n<span class=\"c1\">#Change setting to avoid dataframe from truncating\n</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_rows</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_colwidth</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_columns</span> <span class=\"o\">=</span> <span class=\"mi\">500</span></code></pre></figure>\n\n<hr />\n\n<h2 id=\"reading-the-xml-file\">Reading the XML file</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"c1\"># Reading the XML file into a tree\n</span><span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ET</span><span class=\"p\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s\">\"/icd10pcs_tables_2020.xml\"</span><span class=\"p\">)</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">getroot</span><span class=\"p\">()</span></code></pre></figure>\n\n<hr />\n\n<h2 id=\"parsing-the-nodes\">Parsing the nodes</h2>\n\n<p>After reading the XML file, there’s a consistent pattern for each pcsTable where the first 3 characters of the code will be unique in that table, but the remaining 4 will differ. Depending on the table, there might be more than 1 set of remaining 4 code characters that each will have one or more label under them. The structure is somewhat like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-bash\" data-lang=\"bash\"><span class=\"nb\">.</span>\n├── pcsTable\n│   ├ axis\n│   │  └── label <span class=\"o\">(</span>position 1<span class=\"o\">)</span>\n│   ├ axis\n│   │  └── label <span class=\"o\">(</span>position 2<span class=\"o\">)</span>\n│   ├ axis\n│   │  └── label <span class=\"o\">(</span>position 3<span class=\"o\">)</span>\n│   └ pcsRow\n│       ├ axis\n│       │  └── label <span class=\"o\">(</span>position 4<span class=\"o\">)</span>\n│       ├ axis\n│       │  └── label <span class=\"o\">(</span>position 5<span class=\"o\">)</span>\n│       ├ axis\n│       │  └── label <span class=\"o\">(</span>position 6<span class=\"o\">)</span>\n│       └ axis\n│          └── label <span class=\"o\">(</span>position 7<span class=\"o\">)</span>\n│\n└── pcsTable</code></pre></figure>\n\n<p>To parse this correctly, I created two empty lists to store the parsing result and use a for loop function where:</p>\n<ol>\n  <li>I define the first 3 character codes and titles, concatenate and store them in a separate variable</li>\n  <li>Nest a for loop function that goes through all the rows and define 4 separate variables for each code position (from 4 to 7)</li>\n  <li>Iterate through all the labels for each code positions and append the end result to the lists outside of the loop</li>\n</ol>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"c1\"># Parsing the nodes\n</span><span class=\"n\">code_result</span><span class=\"p\">,</span><span class=\"n\">label_result</span> <span class=\"o\">=</span> <span class=\"p\">[],[]</span>\n<span class=\"n\">pcstable</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"p\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./pcsTable\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">table</span> <span class=\"ow\">in</span> <span class=\"n\">pcstable</span><span class=\"p\">:</span>\n    <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./axis\"</span><span class=\"p\">)</span>           \n    <span class=\"n\">n1</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n    <span class=\"n\">n2</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n    <span class=\"n\">n3</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n    <span class=\"n\">c123</span> <span class=\"o\">=</span> <span class=\"n\">n1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">n2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">n3</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span>\n    <span class=\"n\">l123</span> <span class=\"o\">=</span> <span class=\"n\">n1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n3</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">text</span>     \n    <span class=\"n\">rows</span><span class=\"o\">=</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./pcsRow\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">:</span>                        \n        <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"p\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./axis\"</span><span class=\"p\">)</span>\n        <span class=\"n\">pos4</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n        <span class=\"n\">pos5</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n        <span class=\"n\">pos6</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n        <span class=\"n\">pos7</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">].</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s\">\"./label\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">n4</span> <span class=\"ow\">in</span> <span class=\"n\">pos4</span><span class=\"p\">:</span>\n            <span class=\"n\">l124</span> <span class=\"o\">=</span> <span class=\"n\">l123</span> <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n4</span><span class=\"p\">.</span><span class=\"n\">text</span>\n            <span class=\"n\">c124</span> <span class=\"o\">=</span> <span class=\"n\">c123</span> <span class=\"o\">+</span> <span class=\"n\">n4</span><span class=\"p\">.</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">n5</span> <span class=\"ow\">in</span> <span class=\"n\">pos5</span><span class=\"p\">:</span>\n                <span class=\"n\">l125</span> <span class=\"o\">=</span> <span class=\"n\">l124</span> <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n5</span><span class=\"p\">.</span><span class=\"n\">text</span>\n                <span class=\"n\">c125</span> <span class=\"o\">=</span> <span class=\"n\">c124</span> <span class=\"o\">+</span> <span class=\"n\">n5</span><span class=\"p\">.</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span>\n                <span class=\"k\">for</span> <span class=\"n\">n6</span> <span class=\"ow\">in</span> <span class=\"n\">pos6</span><span class=\"p\">:</span>\n                    <span class=\"n\">l126</span> <span class=\"o\">=</span> <span class=\"n\">l125</span> <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n6</span><span class=\"p\">.</span><span class=\"n\">text</span>\n                    <span class=\"n\">c126</span> <span class=\"o\">=</span> <span class=\"n\">c125</span> <span class=\"o\">+</span> <span class=\"n\">n6</span><span class=\"p\">.</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">n7</span> <span class=\"ow\">in</span> <span class=\"n\">pos7</span><span class=\"p\">:</span>\n                        <span class=\"n\">l127</span> <span class=\"o\">=</span> <span class=\"n\">l126</span>  <span class=\"o\">+</span> <span class=\"s\">\" @ \"</span> <span class=\"o\">+</span> <span class=\"n\">n7</span><span class=\"p\">.</span><span class=\"n\">text</span>\n                        <span class=\"n\">c127</span> <span class=\"o\">=</span> <span class=\"n\">c126</span> <span class=\"o\">+</span> <span class=\"n\">n7</span><span class=\"p\">.</span><span class=\"n\">attrib</span><span class=\"p\">[</span><span class=\"s\">'code'</span><span class=\"p\">]</span>\n                        <span class=\"n\">label_result</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">l127</span><span class=\"p\">)</span>\n                        <span class=\"n\">code_result</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">c127</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>It took me quite a while to solve this. A colleague from work (to whom I’m very grateful!) gave a thorough explanation which provided a great guidance that allowed me to find the right solution. In the process, I learned about XML file structure, strategies that can be used to parse XML and… tqdm package that allows you to see a progress bar for your long iteration.</p>\n\n<p>I didn’t use tqdm progress bar in this notebook because the functions are quite fast to run. I used it running a one hour long for loop function when <a href=\"https://nbviewer.jupyter.org/github/Ezral/officedoc/blob/master/Wrongly%20parsing%20ICD-10-PCS%20XML.ipynb\">I was trying to brute force all the possible combination</a> out of the unique code characters from the ICD-10-PCS XML file which has 880 tables and returned the output of 368,462 codes! Definitely the wrong way to do it, but ended up learning a lot from that process as well.</p>\n\n<p>Overall, I’m happy with the end result and all the take aways that I got from working this project. On to the next!</p>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />","excerpt":"This post is originally written on this jupyter notebook file","languages":null,"categories":["data"],"tags":["data","pin"]},{"title":"Building a Spam Filter with Naive Bayes","permalink":"https://ezral.net/Dataquest-guided-project-3.html","link":"https://ezral.net/Dataquest-guided-project-3.html","date":"2020-07-06T00:00:00+00:00","modified":"2020-07-07T07:43:01+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<h6 id=\"this-is-a-dataquest-guided-project-originally-written-on-this-jupyter-notebook-file\">This is a <a href=\"https://app.dataquest.io/m/433/guided-project%3A-building-a-spam-filter-with-naive-bayes\">Dataquest guided project</a> originally written on <a href=\"https://nbviewer.jupyter.org/github/Ezral/guided_project/blob/master/Building%20a%20Spam%20Filter%20with%20Naive%20Bayes.ipynb\">this jupyter notebook file</a></h6>\n\n<h2 id=\"background\">Background</h2>\n\n<p>Have you ever felt disturbed by spam messages? I’m sure everybody has. Even those who sent the spam messages have. Fortunately there’s this thing called spam filter that helps us avoid the hassle of repeatedly cleaning our inbox. The goal of this exercise is to create a basic messaging spam filter using Naive Bayes theorem. Isn’t this exciting? It sure is.</p>\n\n<p>We’ll achieve this goal using a dataset put together by Tiago A. Almeida and José María Gómez Hidalgo that has 5,572 SMS messages made available in <a href=\"https://archive.ics.uci.edu/ml/datasets/sms+spam+collection\">UCI Machine Learning Repository</a>.  The messages have been previously classified into spam/ham (not spam) category and can be downloaded from <a href=\"https://dq-content.s3.amazonaws.com/433/SMSSpamCollection\">here</a>. This allows us to “train” the algorithm to classify the messages and later on label whether a certain message is a spam/ham using the following principal:</p>\n\n<p>If the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Spam) \\cdot \\prod_{i=1}^{n}P(w_i|Spam) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> is bigger than <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><msup><mi>m</mi><mi>C</mi></msup><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><msup><mi>m</mi><mi>C</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Spam^C) \\cdot \\prod_{i=1}^{n}P(w_i|Spam^C) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.141041em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> then it’s a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Spam message</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Spam message} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord\">Spam message</span></span></span></span></span>.</p>\n\n<p>Otherwise, if the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Spam) \\cdot \\prod_{i=1}^{n}P(w_i|Spam) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> is smaller than the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><msup><mi>m</mi><mi>C</mi></msup><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><msup><mi>m</mi><mi>C</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Spam^C) \\cdot \\prod_{i=1}^{n}P(w_i|Spam^C) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.141041em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> then it’s not a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Spam message</mtext></mrow><annotation encoding=\"application/x-tex\"> \\text{Spam message} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord\">Spam message</span></span></span></span></span></p>\n\n<p>Now that we’ve covered the basics, let’s start working~</p>\n\n<h2 id=\"content\">Content</h2>\n<blockquote>\n  <ul>\n    <li><a href=\"#background\">Background</a></li>\n    <li><a href=\"#separating-the-dataset\">Loading the dataset</a></li>\n    <li><a href=\"#separating-the-dataset\">Separating the dataset</a></li>\n    <li><a href=\"#cleaning-the-dataset\">Cleaning the dataset</a></li>\n    <li><a href=\"#creating-word-count-dataset\">Creating word count dataset</a></li>\n    <li><a href=\"#calculating-constants\">Calculating constants</a></li>\n    <li><a href=\"#calculating-parameters\">Calculating parameters</a></li>\n    <li><a href=\"#creating-spam-filter-function\">Creating spam filter function</a></li>\n    <li><a href=\"#measuring-filter-accuracy\">Measuring filter accuracy</a></li>\n    <li><a href=\"#conclusion\">Conclusion</a></li>\n  </ul>\n</blockquote>\n\n<hr />\n\n<h2 id=\"loading-the-dataset\">Loading the dataset</h2>\n\n<p>First we will import the packages that we’ll be using and load the dataset. We’ll also take a quick look at the dataset to familiarize ourselves with the data.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [1]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Importing packages for data management\n</span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>    <span class=\"c1\"># Importing pandas\n</span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>     <span class=\"c1\"># Importing numpy\n</span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"n\">dt</span>  <span class=\"c1\"># Importing datetime\n</span><span class=\"kn\">import</span> <span class=\"nn\">re</span>              <span class=\"c1\"># Importing regular expression\n</span><span class=\"kn\">import</span> <span class=\"nn\">warnings</span>        <span class=\"c1\"># To suppress warning alert\n</span><span class=\"n\">warnings</span><span class=\"p\">.</span><span class=\"n\">filterwarnings</span><span class=\"p\">(</span><span class=\"s\">'ignore'</span><span class=\"p\">)</span>\n<span class=\"c1\">#Change setting to avoid dataframe from truncating\n</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_rows</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_colwidth</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">.</span><span class=\"n\">max_columns</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"c1\"># Displaying all output from code cell. Default value = 'last_expr'.\n</span><span class=\"kn\">from</span> <span class=\"nn\">IPython.core.interactiveshell</span> <span class=\"kn\">import</span> <span class=\"n\">InteractiveShell</span>\n<span class=\"n\">InteractiveShell</span><span class=\"p\">.</span><span class=\"n\">ast_node_interactivity</span> <span class=\"o\">=</span> <span class=\"s\">\"all\"</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [2]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># loading the dataset\n</span><span class=\"n\">sms</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">\"SMSSpamCollection\"</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s\">'</span><span class=\"se\">\\t</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">,</span><span class=\"s\">'spam_sms'</span><span class=\"p\">])</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [3]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Shape and proportion of the dataset\n</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">SMSSpamCollection dataset has {} rows and {} columns\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">sms</span><span class=\"p\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n<span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">].</span><span class=\"n\">value_counts</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">100</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [3]:</code></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    SMSSpamCollection dataset has 5572 rows and 2 columns\n\n    ham     86.593683\n    spam    13.406317\n    Name: Label, dtype: float64\n</code></pre></div></div>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />\n\n<h2 id=\"separating-the-dataset\">Separating the dataset</h2>\n\n<p>To create the spam filter we will need to split the dataset into 2, one for training purpose and the other one for the spam filter testing. The dataset will be split into 80:20 proportion, the larger one being the training dataset that will “teach” our algorithm to recognize spam messages.</p>\n\n<p>Here’s where the pre-labelled message will come into play. Basically we’ll have the algorithm calculate and store probability for every single words in the dataset, letting it know which words are more probable to be used in spam and which words are not.</p>\n\n<p>Since we have this 5,572 rows of messages, we’ll split them into two sets, 80% for training and 20% for testing.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [4]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Randomizing the dataset\n</span><span class=\"n\">random_set</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"p\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">frac</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Calculating the index for split\n</span><span class=\"n\">random_index</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">random_set</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mf\">0.8</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Splitting the dataset\n</span><span class=\"n\">training</span> <span class=\"o\">=</span> <span class=\"n\">random_set</span><span class=\"p\">[:</span><span class=\"n\">random_index</span><span class=\"p\">].</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">random_set</span><span class=\"p\">[</span><span class=\"n\">random_index</span><span class=\"p\">:].</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Checking shape and label proportion for training dataset\n</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Training dataset has {} rows.\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">training</span><span class=\"p\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">].</span><span class=\"n\">value_counts</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">100</span>\n\n<span class=\"c1\"># Checking shape and label proportion for test dataset\n</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Test dataset has {} rows.\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">].</span><span class=\"n\">value_counts</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">100</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [4]:</code></p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    Training dataset has 4458 rows.\n    ham     86.54105\n    spam    13.45895\n    Name: Label, dtype: float64\n\n    Test dataset has 1114 rows.\n    ham     86.804309\n    spam    13.195691\n    Name: Label, dtype: float64\n</code></pre></div></div>\n\n<p>We’ve split them nicely and it looks like the proportion between the two is similar, which is good.</p>\n\n<hr />\n\n<h2 id=\"cleaning-the-dataset\">Cleaning the dataset</h2>\n\n<p>Up next, tidying the dataset. We’ll clean the words by removing any punctuation and have all the words in lower case.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [5]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Changing to lower case and replacing all punctuation\n</span><span class=\"k\">def</span> <span class=\"nf\">clean_punctuation</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"p\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s\">'\\W'</span><span class=\"p\">,</span> <span class=\"s\">' '</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">].</span><span class=\"nb\">apply</span><span class=\"p\">(</span><span class=\"n\">clean_punctuation</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<hr />\n\n<h2 id=\"creating-word-count-dataset\">Creating word count dataset</h2>\n\n<p>To count the words, we need to split the words in the messages. By performing a split we’d be creating series containing lists that we can iterate to obtain the vocabulary frequency.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [5]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Transforming messages in SMS column into list\n</span><span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">].</span><span class=\"nb\">str</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [6]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Creating vocabulary from the SMS column\n</span><span class=\"n\">vocabulary</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">]:</span>\n    <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">row</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">:</span>\n            <span class=\"n\">vocabulary</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n</code></pre></div></div>\n\n<p>The for loop function in the above should prevent any duplicate in the vocabulary list.\nQuick check to confirm that there’s no duplicate:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [7]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vocabulary</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">vocabulary</span><span class=\"p\">))</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vocabulary</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [7]:</code></p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    True\n    7783\n</code></pre></div></div>\n\n<p>The check returns <code class=\"language-plaintext highlighter-rouge\">True</code>, meaning there’s no duplicated words and the vocabulary has 7,873 unique words in it.</p>\n\n<p>Now we can move on to the next step, which is counting the number of times a certain word is used and storing them into a dataframe. This dataframe will later be concatenated with training dataframe to complete the process.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [8]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Creating word count per sms dictionary\n</span><span class=\"n\">word_counts_per_sms</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">unique_word</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">unique_word</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># For loop function to fill the dictionary\n</span><span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">sms</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">]):</span>\n    <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">sms</span><span class=\"p\">:</span>\n        <span class=\"n\">word_counts_per_sms</span><span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">][</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [9]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Creating word count dataframe and concatenating it with training dataframe\n</span><span class=\"n\">word_count_data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">word_counts_per_sms</span><span class=\"p\">)</span>\n<span class=\"n\">training_set</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">training</span><span class=\"p\">,</span><span class=\"n\">word_count_data</span><span class=\"p\">],</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>By having this we can obtain the frequency of a word on a certain label and subsequently calculate the probability of that particular word given spam or ham.</p>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />\n\n<h2 id=\"calculating-constants\">Calculating constants</h2>\n\n<p>Calculating <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(Spam)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(Ham)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mrow><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">N_{Spam}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault mtight\">p</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mrow><mi>H</mi><mi>a</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">N_{Ham}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mrow><mi>V</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>b</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">N_{Vocabulary}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">c</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">b</span><span class=\"mord mathdefault mtight\">u</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [10]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Calculating the constants\n</span><span class=\"n\">p_ham</span><span class=\"o\">=</span><span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">].</span><span class=\"n\">value_counts</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">p_spam</span><span class=\"o\">=</span><span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">].</span><span class=\"n\">value_counts</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Function to count n of words\n</span><span class=\"k\">def</span> <span class=\"nf\">word_counter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"s\">'''Function takes in a series\n    of strings that will append\n    it to a list and return the\n    len to complete the word count\n    '''</span>\n    <span class=\"n\">result</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">row</span><span class=\"p\">:</span>\n            <span class=\"n\">word</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n            <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Number of words in vocabulary, ham and spam\n</span><span class=\"n\">n_vocab</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vocabulary</span><span class=\"p\">)</span>\n<span class=\"n\">n_ham</span> <span class=\"o\">=</span> <span class=\"n\">word_counter</span><span class=\"p\">(</span><span class=\"n\">training_set</span><span class=\"p\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s\">\"Label=='ham'\"</span><span class=\"p\">)[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">])</span>\n<span class=\"n\">n_spam</span> <span class=\"o\">=</span> <span class=\"n\">word_counter</span><span class=\"p\">(</span><span class=\"n\">training_set</span><span class=\"p\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s\">\"Label=='spam'\"</span><span class=\"p\">)[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Laplace smoothing\n</span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />\n\n<h2 id=\"calculating-parameters\">Calculating parameters</h2>\n\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(w_{i} | Spam)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(w_{i} | Ham)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> that will be used to classify the incoming message are called <em>parameters</em>.\nThey will be calculated using the following equations:</p>\n\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><msub><mi>N</mi><mrow><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi></mrow></msub><mo>+</mo><mi>α</mi></mrow><mrow><msub><mi>N</mi><mrow><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi></mrow></msub><mo>+</mo><msub><mi>N</mi><mrow><mi>V</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>b</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\nP(w_{i} | Spam) = \\frac{N_{w_{i}|Spam}+ \\alpha}{N_{Spam} + N_{Vocabulary}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.400638em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4285299999999999em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault mtight\">p</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">c</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">b</span><span class=\"mord mathdefault mtight\">u</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7451999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault mtight\">p</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mi>a</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><msub><mi>N</mi><mrow><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mi>a</mi><mi>m</mi></mrow></msub><mo>+</mo><mi>α</mi></mrow><mrow><msub><mi>N</mi><mrow><mi>H</mi><mi>a</mi><mi>m</mi></mrow></msub><mo>+</mo><msub><mi>N</mi><mrow><mi>V</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>b</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\nP(w_{i} | Ham) = \\frac{N_{w_{i}|Ham}+ \\alpha}{N_{Ham} + N_{Vocabulary}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.400638em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4285299999999999em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">c</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">b</span><span class=\"mord mathdefault mtight\">u</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7451999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [11]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Separating spam/ham messages\n</span><span class=\"n\">spam_msg</span> <span class=\"o\">=</span> <span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"s\">'spam'</span><span class=\"p\">]</span>\n<span class=\"n\">ham_msg</span> <span class=\"o\">=</span> <span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"n\">training_set</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"s\">'ham'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Creating 2 dictionaries for parameters\n</span><span class=\"n\">parameters_spam</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">}</span>\n<span class=\"n\">parameters_ham</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [12]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Calculating parameters:\n</span>\n<span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">:</span>\n    <span class=\"n\">n_word_given_spam</span> <span class=\"o\">=</span> <span class=\"n\">spam_msg</span><span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">].</span><span class=\"nb\">sum</span><span class=\"p\">()</span>   \n    <span class=\"n\">p_word_given_spam</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">n_word_given_spam</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">n_spam</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span><span class=\"o\">*</span><span class=\"n\">n_vocab</span><span class=\"p\">)</span>\n    <span class=\"n\">parameters_spam</span><span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">p_word_given_spam</span>\n\n    <span class=\"n\">n_word_given_ham</span> <span class=\"o\">=</span> <span class=\"n\">ham_msg</span><span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">].</span><span class=\"nb\">sum</span><span class=\"p\">()</span>\n    <span class=\"n\">p_word_given_ham</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">n_word_given_ham</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">n_ham</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span><span class=\"o\">*</span><span class=\"n\">n_vocab</span><span class=\"p\">)</span>\n    <span class=\"n\">parameters_ham</span><span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">p_word_given_ham</span>\n</code></pre></div></div>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />\n\n<h2 id=\"creating-spam-filter-function\">Creating spam filter function</h2>\n\n<p>The spam filter works by comparing the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mi>p</mi><mi>a</mi><mi>m</mi><mi mathvariant=\"normal\">∣</mi><mi>M</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Spam | Message)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mi>a</mi><mi>m</mi><mi mathvariant=\"normal\">∣</mi><mi>M</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P(Ham | Message)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">m</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mclose\">)</span></span></span></span> and assigning spam/ham label depending on which one has the larger proportion. To do this we’ll use the following function:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [13]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Spam filter function\n</span><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">prob</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">dictionary</span><span class=\"p\">,</span> <span class=\"n\">init_value</span><span class=\"p\">):</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">init_value</span>\n    <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">message</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">dictionary</span><span class=\"p\">:</span>\n            <span class=\"n\">p</span> <span class=\"o\">*=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n    <span class=\"k\">return</span> <span class=\"n\">p</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">classify</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"p\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s\">'\\W'</span><span class=\"p\">,</span> <span class=\"s\">' '</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"p\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n\n    <span class=\"n\">p_spam_given_message</span> <span class=\"o\">=</span> <span class=\"n\">prob</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">parameters_spam</span><span class=\"p\">,</span> <span class=\"n\">p_spam</span><span class=\"p\">)</span>\n    <span class=\"n\">p_ham_given_message</span> <span class=\"o\">=</span> <span class=\"n\">prob</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">parameters_ham</span><span class=\"p\">,</span> <span class=\"n\">p_ham</span><span class=\"p\">)</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'P(Spam|message):'</span><span class=\"p\">,</span> <span class=\"n\">p_spam_given_message</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'P(Ham|message):'</span><span class=\"p\">,</span> <span class=\"n\">p_ham_given_message</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">p_ham_given_message</span> <span class=\"o\">&gt;</span> <span class=\"n\">p_spam_given_message</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'Label: Ham'</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">p_ham_given_message</span> <span class=\"o\">&lt;</span> <span class=\"n\">p_spam_given_message</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'Label: Spam'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'Equal proabilities, have a human classify this!'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Testing the <code class=\"language-plaintext highlighter-rouge\">classify</code> function using a message that’s clearly a spam:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [14]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">classify</span><span class=\"p\">(</span><span class=\"s\">'WINNER!! This is the secret code to unlock the money: C3421.'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [14]:</code></p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    P(Spam|message): 1.3481290211300841e-25\n    P(Ham|message): 1.9368049028589875e-27\n    Label: Spam\n</code></pre></div></div>\n\n<p>and using a message that’s a ham:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [15]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">classify</span><span class=\"p\">(</span><span class=\"s\">\"Sounds good, Tom, then see u there\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [15]:</code></p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    P(Spam|message): 2.4372375665888117e-25\n    P(Ham|message): 3.687530435009238e-21\n    Label: Ham\n</code></pre></div></div>\n\n<p>This shows that the function is working properly and we can apply it to the test set that we haven’t touched yet. We’ll do that while measuring the filter accuracy.</p>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />\n\n<h2 id=\"measuring-filter-accuracy\">Measuring filter accuracy</h2>\n\n<p>To do this, we will compare the set that was not included in the training set, which is the test set, and compare the label given by the filter with the label that comes with the dataset, which is done by human.\nWe’ll adjust the <code class=\"language-plaintext highlighter-rouge\">classify</code> function in the above to return a value instead of printing them so we can apply it to create a new column.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [16]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Function to test the filter function\n</span><span class=\"k\">def</span> <span class=\"nf\">classify_test_set</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"p\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s\">'[\\W]'</span><span class=\"p\">,</span><span class=\"s\">' '</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"p\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">\"[\\s]\"</span><span class=\"p\">,</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">p_spam_given_message</span> <span class=\"o\">=</span> <span class=\"n\">prob</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">parameters_spam</span><span class=\"p\">,</span> <span class=\"n\">p_spam</span><span class=\"p\">)</span>\n    <span class=\"n\">p_ham_given_message</span> <span class=\"o\">=</span> <span class=\"n\">prob</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">parameters_ham</span><span class=\"p\">,</span> <span class=\"n\">p_ham</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">p_ham_given_message</span> <span class=\"o\">&gt;</span> <span class=\"n\">p_spam_given_message</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s\">'ham'</span>\n    <span class=\"k\">elif</span> <span class=\"n\">p_ham_given_message</span> <span class=\"o\">&lt;</span> <span class=\"n\">p_spam_given_message</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s\">'spam'</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s\">'Equal proabilities, have a human classify this!'</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [17]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Applying the function\n</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'predicted'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'spam_sms'</span><span class=\"p\">].</span><span class=\"nb\">apply</span><span class=\"p\">(</span><span class=\"n\">classify_test_set</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mtext>Accuracy</mtext><mo>=</mo><mfrac><mtext>number of correctly classified messages</mtext><mtext>total number of classifed messages</mtext></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">\n\\small \\text{Accuracy} = \\frac{\\text{number of correctly classified messages}}{\\text{total number of classifed messages}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7899930000000001em;vertical-align:-0.174996em;\"></span><span class=\"mord text sizing reset-size6 size5\"><span class=\"mord\">Accuracy</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel sizing reset-size6 size5\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0266919999999997em;vertical-align:-0.7923960000000001em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mopen nulldelimiter sizing reset-size5 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">total number of classifed messages</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">number of correctly classified messages</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size5 size6\"></span></span></span></span></span></span>\nThe applied function works as expected. Next we’ll do the calculation in the above on the dataset by using this for loop function below that will print the numbers:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">in [18]:</code></p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Measuring accuracy value\n</span><span class=\"n\">correct</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">val_1</span><span class=\"p\">,</span> <span class=\"n\">val_2</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'Label'</span><span class=\"p\">],</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s\">'predicted'</span><span class=\"p\">]):</span>\n    <span class=\"k\">if</span> <span class=\"n\">val_1</span> <span class=\"o\">==</span> <span class=\"n\">val_2</span><span class=\"p\">:</span>\n        <span class=\"n\">correct</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Accuracy value of the spam filter is {}%.\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">correct</span><span class=\"o\">/</span><span class=\"n\">total</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Number of correct label: {}\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">correct</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Number of incorrect label: {}\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">-</span><span class=\"n\">correct</span><span class=\"p\">))</span>\n</code></pre></div></div>\n<p><code class=\"language-plaintext highlighter-rouge\">out [18]:</code></p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    Accuracy value of the spam filter is 98.74326750448833%.\n    Number of correct label: 1100\n    Number of incorrect label: 14\n</code></pre></div></div>\n\n<hr />\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In conclusion, it’s a really worthwhile project that helped me understand the application of Bayes theorem and see how a simple spam filter that uses statistics works. It would be interesting to see how we might be able to increase the accuracy further by modifying the algorithm.</p>\n\n<p><a href=\"#background\">Back to top</a></p>\n\n<hr />","excerpt":"This is a Dataquest guided project originally written on this jupyter notebook file","languages":null,"categories":["data"],"tags":["data","pin"]},{"title":"Displaying math formula on ASMF","permalink":"https://ezral.net/Displaying-math-formula-on-ASMF.html","link":"https://ezral.net/Displaying-math-formula-on-ASMF.html","date":"2020-06-30T00:00:00+00:00","modified":"2020-06-30T13:54:34+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>This is a short post on how to set up KaTex plugin to render TeX on Almace Scaffolding, mostly taken from <a href=\"https://github.com/linjer/jekyll-katex\">Jekyll-Katex</a> github page.</p>\n<ol>\n  <li>Add plugin to <code class=\"language-plaintext highlighter-rouge\">_config.yml</code>:</li>\n</ol>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"ss\">plugins:\n  </span><span class=\"o\">-</span> <span class=\"n\">jekyll</span><span class=\"o\">-</span><span class=\"n\">katex</span></code></pre></figure>\n\n<ol>\n  <li>Add <code class=\"language-plaintext highlighter-rouge\">jekyll-katex</code> to Gemfile plugin block:</li>\n</ol>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"n\">group</span> <span class=\"ss\">:jekyll_plugins</span> <span class=\"k\">do</span>\n  <span class=\"n\">gem</span> <span class=\"s1\">'jekyll-katex'</span>\n<span class=\"k\">end</span></code></pre></figure>\n\n<p>Once this is done, execute <code class=\"language-plaintext highlighter-rouge\">bundle install</code></p>\n<ol>\n  <li>Place the following script into your\n<code class=\"language-plaintext highlighter-rouge\">/my-site/_includes/themes/curtana/includes/top.html</code> :</li>\n</ol>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"o\">&lt;</span><span class=\"n\">link</span> <span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s2\">\"stylesheet\"</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css\"</span> <span class=\"n\">integrity</span><span class=\"o\">=</span><span class=\"s2\">\"sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq\"</span> <span class=\"n\">crossorigin</span><span class=\"o\">=</span><span class=\"s2\">\"anonymous\"</span><span class=\"o\">&gt;</span></code></pre></figure>\n\n<p>Once these 3 steps are done you are ready to go. For more details on usage check out <a href=\"https://github.com/linjer/jekyll-katex\">Jekyll-Katex</a> page.</p>\n\n<hr />","excerpt":"This is a short post on how to set up KaTex plugin to render TeX on Almace Scaffolding, mostly taken from Jekyll-Katex github page.\n\n  Add plugin to _config.yml:","languages":null,"categories":["news"],"tags":["comp"]},{"title":"Dataquest Guided Project #2","permalink":"https://ezral.net/Guided-project-Mobile-App-for-lottery-addiction.html","link":"https://ezral.net/Guided-project-Mobile-App-for-lottery-addiction.html","date":"2020-06-30T00:00:00+00:00","modified":"2020-06-30T13:54:34+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>This is another guided project from <a href=\"dataquest.io\">Dataquest</a> that I recently completed.\nIt’s not really data heavy like the usual ones as it focuses more on probability topic.\nI particularly enjoy this one where I learned how to write math formula using TeX in Jupyter Notebook.</p>\n\n<p>For example, this line here:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-tex\" data-lang=\"tex\"><span class=\"k\">\\frac</span><span class=\"p\">{</span>n!<span class=\"p\">}{</span>k!(n-k)!<span class=\"p\">}</span> = <span class=\"k\">\\binom</span><span class=\"p\">{</span>n<span class=\"p\">}{</span>k<span class=\"p\">}</span></code></pre></figure>\n\n<p>will give this output:</p>\n\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mi>k</mi><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac linethickness=\"0px\"><mi>n</mi><mi>k</mi></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.30744em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">!</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose\">!</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mclose\">!</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1075599999999999em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span></span></span></p>\n\n<p>Another different thing that I tried is using anchors on the notebook page using the header which turned out to be real simple.\nFor example,</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-md\" data-lang=\"md\"><span class=\"p\">[</span><span class=\"nv\">Click here</span><span class=\"p\">](</span><span class=\"sx\">#Anchor</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>Will bring you to your  <code class=\"language-plaintext highlighter-rouge\"># Anchor</code> header. Note that you need to remove the whitespace between # and your header. If you have whitespace on your header you need to replace them with <code class=\"language-plaintext highlighter-rouge\">\"-\"</code>. For example  <code class=\"language-plaintext highlighter-rouge\"># Your header</code> should be written like this</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-md\" data-lang=\"md\"><span class=\"p\">[</span><span class=\"nv\">Click here</span><span class=\"p\">](</span><span class=\"sx\">#Your-header</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>Click <a href=\"https://nbviewer.jupyter.org/github/Ezral/guided_project/blob/master/Mobile%20App%20for%20Lottery%20Addiction.ipynb\">here</a> to view the notebook.</p>\n\n<hr />","excerpt":"This is another guided project from Dataquest that I recently completed.\nIt’s not really data heavy like the usual ones as it focuses more on probability topic.\nI particularly enjoy this one where I learned how to write math formula using TeX in Jupyter Notebook.","languages":null,"categories":["data"],"tags":["data"]},{"title":"Reviewing ECG","permalink":"https://ezral.net/Reviewing-ECG.html","link":"https://ezral.net/Reviewing-ECG.html","date":"2020-06-26T00:00:00+00:00","modified":"2020-06-30T14:35:18+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>Being able to read ECG was one of my main goals in the late years of med school. After I graduated, I’d be able to recognise the life threatening ones but I wasn’t really comfortable doing a proper interpretation. \nOne time during a visit to the ICU a colleague pointed out something that I wasn’t able to read and it wasn’t good.\nThat was the turning point that led me to ECG self study which involved hours of youtube and reading and doing exercises.</p>\n\n<p>I’d strongly recommend the following resources to those wanting to learn to interpret ECGs:</p>\n<ul>\n  <li>Watch all ECG  videos in <a href=\"https://www.youtube.com/user/Touzeau123/videos\">Touzeau123’s youtube channel</a>,</li>\n  <li>Go through <a href=\"https://litfl.com/ecg-library/\">ECG resources in LITFL</a>,</li>\n  <li>Finish all 200 ECG problems in <a href=\"https://www.amazon.com/ECGs-Emergency-Physician-Amal-Mattu/dp/0727916548\">Amal Mattu’s book</a>.</li>\n</ul>\n\n<p>These will definitely be enough for anyone to master the basics of ECG. If you want to go further however, there’s this post written by <a href=\"https://www.roshreview.com/author/sweisenfeld/\">Shari Weisenfeld, MD</a> that outlines a very detailed <a href=\"https://www.roshreview.com/blog/study-strategies/how-an-internist-learned-to-read-ekgs-better-than-a-cardiologist/\">ECG self-study program</a> that you can follow to get from scratch to an advanced level.</p>\n\n<hr />","excerpt":"Being able to read ECG was one of my main goals in the late years of med school. After I graduated, I’d be able to recognise the life threatening ones but I wasn’t really comfortable doing a proper interpretation. \nOne time during a visit to the ICU a colleague pointed out something that I wasn’t able to read and it wasn’t good.\nThat was the turning point that led me to ECG self study which involved hours of youtube and reading and doing exercises.","languages":null,"categories":["medical"],"tags":["ecg","pin"]},{"title":"Proportion of Doctors in Indonesia","permalink":"https://ezral.net/Proportion-of-Doctors-in-Indonesia.html","link":"https://ezral.net/Proportion-of-Doctors-in-Indonesia.html","date":"2020-06-26T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p><img src=\"/assets/img/img2.png\" alt=\"doc_proportion\" /></p>\n\n<hr />","excerpt":"","languages":null,"categories":["data"],"tags":["data"]},{"title":"Almace Scaffolding Quick Post","permalink":"https://ezral.net/Almace-Scaffolding-quick-post.html","link":"https://ezral.net/Almace-Scaffolding-quick-post.html","date":"2020-06-25T00:00:00+00:00","modified":"2020-06-27T05:34:24+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>This is a snippet I use to quickly create a post draft for Almace Scaffolding from command line.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"k\">function </span>blog <span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nb\">local </span><span class=\"nv\">DATE</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +<span class=\"s2\">\"%Y-%m-%d\"</span><span class=\"si\">)</span><span class=\"p\">;</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$3</span>\n    <span class=\"nb\">touch</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"---</span><span class=\"se\">\\n</span><span class=\"s2\">layout: post</span><span class=\"se\">\\n</span><span class=\"s2\">title: </span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"p\">//-/ </span><span class=\"k\">}</span><span class=\"se\">\\n</span><span class=\"s2\">category: </span><span class=\"nv\">$1</span><span class=\"se\">\\n</span><span class=\"s2\">tags: </span><span class=\"nv\">$2</span><span class=\"se\">\\n</span><span class=\"s2\">---</span><span class=\"se\">\\n\\n</span><span class=\"s2\">write here</span><span class=\"se\">\\n\\n</span><span class=\"s2\">---\"</span> <span class=\"o\">&gt;</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"nv\">$DATE</span><span class=\"s2\">-</span><span class=\"nv\">$3</span><span class=\"s2\">.md has been created in ~/github_repo/my-site/_app/_posts/</span><span class=\"nv\">$1</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">cd</span> /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>\n    atom /Users/user/github_repo/my-site/_app/_posts/<span class=\"nv\">$1</span>/<span class=\"nv\">$DATE</span>-<span class=\"nv\">$3</span>.md<span class=\"p\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And since I have to generate all the html content for every time I make any changes, I wrote a function to <code class=\"language-plaintext highlighter-rouge\">grunt build</code>, re-adding CNAME file that gets deleted by grunt and <code class=\"language-plaintext highlighter-rouge\">git add</code> followed by <code class=\"language-plaintext highlighter-rouge\">git status</code> to compile all those steps into one line.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"k\">function </span>buildblog<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> /Users/user/github_repo/my-site/<span class=\"p\">;</span>\n    grunt <span class=\"nt\">--force</span> build<span class=\"p\">;</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"site.com\"</span> <span class=\"o\">&gt;</span> temp | <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> temp /Users/user/github_repo/my-site/docs/CNAME<span class=\"p\">;</span>\n    <span class=\"nb\">rm </span>temp<span class=\"p\">;</span>\n    git add docs/<span class=\"k\">*</span> _app/<span class=\"k\">*</span><span class=\"p\">;</span>\n    git status<span class=\"p\">;</span>\n    git commit <span class=\"nt\">-m</span> <span class=\"nv\">$1</span><span class=\"p\">;</span>\n    git push<span class=\"p\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And that’s how I get them posts published.</p>\n\n<hr />","excerpt":"This is a snippet I use to quickly create a post draft for Almace Scaffolding from command line.","languages":null,"categories":["news"],"tags":["comp"]},{"title":"Doctor density per 1,000 population","permalink":"https://ezral.net/doctor-proportion.html","link":"https://ezral.net/doctor-proportion.html","date":"2020-06-24T00:00:00+00:00","modified":"2020-06-30T07:11:03+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p><img src=\"/assets/img/img1.png\" alt=\"doc_proportion\" /></p>\n\n<p>This is a bar chart showing doctor density for each province in Indonesia with color gradient describing the land km square of the province.</p>\n\n<blockquote>\n  <p>Available statistics show that over 45% of WHO Member States report to have less than 1 physician\nper 1,000 population.\n— <a href=\"https://www.who.int/gho/health_workforce/physicians_density/en/\">World Health Organization</a></p>\n</blockquote>\n\n<hr />","excerpt":"","languages":null,"categories":["data"],"tags":["data","pin"]},{"title":"Dataquest Guided Project #1","permalink":"https://ezral.net/data-quest-guided-project.html","link":"https://ezral.net/data-quest-guided-project.html","date":"2020-06-24T00:00:00+00:00","modified":"2020-06-30T07:26:43+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>From a colleague’s remark regarding data science course, I was somehow encouraged to venture into doing some lessons on <a href=\"https://dataquest.io\">Dataquest</a>. Little did I know that I was going to like it this much.\nI figure I’d keep one of the first Dataquest guided projects that I completed in this blog. This one is about <a href=\"https://nbviewer.jupyter.org/urls/community.dataquest.io/uploads/short-url/6dRDpeZHZCHxZUwyDrGKo3DMrcv.ipynb\">Star Wars movie survey</a>.</p>\n\n<hr />","excerpt":"From a colleague’s remark regarding data science course, I was somehow encouraged to venture into doing some lessons on Dataquest. Little did I know that I was going to like it this much.\nI figure I’d keep one of the first Dataquest guided projects that I completed in this blog. This one is about Star Wars movie survey.","languages":null,"categories":["data"],"tags":["data"]},{"title":"Setting up ZSH","permalink":"https://ezral.net/setting-up-zsh.html","link":"https://ezral.net/setting-up-zsh.html","date":"2020-06-23T00:00:00+00:00","modified":"2020-06-27T05:34:24+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>MacOSX Catalina 15.5 update changed the Terminal emulator default shell from bash to zsh and I figure it’s the right time to get to know zsh. Here’s how I setup my zsh after doing a quick search on the web.</p>\n\n<p><strong>1. Installing oh-my-zsh</strong></p>\n\n<p>I installed <em><a href=\"https://github.com/ohmyzsh/ohmyzsh\">oh-my-zsh</a></em> via curl:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>sh <span class=\"nt\">-c</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>curl <span class=\"nt\">-fsSL</span> https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class=\"si\">)</span><span class=\"s2\">\"</span></code></pre></figure>\n\n<p>Oh-my-zsh will write its default <code class=\"language-plaintext highlighter-rouge\">.zshrc</code> onto ours and that will makes things easier to customize.</p>\n\n<hr />\n\n<p><strong>2. Setting up oh-y-zsh theme</strong></p>\n\n<p>There are plenty of great looking themes but I like this clean looking <a href=\"https://github.com/denysdovhan/spaceship-prompt\">spaceship</a> theme. Clone the repo to install:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/denysdovhan/spaceship-prompt.git <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship-prompt\"</span></code></pre></figure>\n\n<p>Then symlink <code class=\"language-plaintext highlighter-rouge\">spaceship.zsh-theme</code> to the oh-my-zsh custom themes directory:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span><span class=\"nb\">ln</span> <span class=\"nt\">-s</span> <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship-prompt/spaceship.zsh-theme\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$ZSH_CUSTOM</span><span class=\"s2\">/themes/spaceship.zsh-theme\"</span></code></pre></figure>\n\n<p>And set <code class=\"language-plaintext highlighter-rouge\">ZSH_THEME=\"spaceship\"</code> in your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>. To set up the prompt, you can see the prompt options <a href=\"https://denysdovhan.com/spaceship-prompt/docs/Options.htmlprompt\">here</a>. The setup I’m using in my <code class=\"language-plaintext highlighter-rouge\">.zshrc</code> is like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">SPACESHIP_USER_SHOW</span><span class=\"o\">=</span>always\n<span class=\"nv\">SPACESHIP_USER_COLOR</span><span class=\"o\">=</span>green\n<span class=\"nv\">SPACESHIP_USER_SUFFIX</span><span class=\"o\">=</span><span class=\"s1\">' '</span>\n<span class=\"nv\">SPACESHIP_HOST_PREFIX</span><span class=\"o\">=</span><span class=\"s2\">\"@\"</span>\n<span class=\"nv\">SPACESHIP_HOST_SUFFIX</span><span class=\"o\">=</span><span class=\"s2\">\" \"</span></code></pre></figure>\n\n<hr />\n\n<p><strong>3. Installing font</strong></p>\n\n<p>I used <a href=\"https://github.com/tonsky/FiraCode\">FiraCode</a>. Installation instructions can be found in FiraCode <a href=\"https://github.com/tonsky/FiraCode/wiki/Installing\">wiki</a>.\nHomebrew offers a quick way to do it:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>brew tap homebrew/cask-fonts\n<span class=\"nv\">$ </span>brew cask <span class=\"nb\">install </span>font-fira-code</code></pre></figure>\n\n<p>Once installed, select to use the font in your Terminal emulator preference.</p>\n\n<hr />\n\n<p><strong>4. Setting up oh-my-zsh plugins</strong></p>\n\n<p>To install zsh-syntax-highlighting in your <code class=\"language-plaintext highlighter-rouge\">~/.zshrcs</code>, first clone the repo:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"nv\">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting</code></pre></figure>\n\n<p>Then, enable syntax highlighting in the current interactive shell by adding the line below:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span><span class=\"nb\">source</span> /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></pre></figure>\n\n<p>Note the <code class=\"language-plaintext highlighter-rouge\">source</code> command must be <strong>at the end</strong> of <code class=\"language-plaintext highlighter-rouge\">~/.zshrc</code>. Next, clone zsh-syntax-suggestion repo as well to install it:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">$ </span>git clone https://github.com/zsh-users/zsh-autosuggestions.git <span class=\"nv\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</code></pre></figure>\n\n<p>To enable it we need to add the plugin in your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"><span class=\"nv\">plugins</span><span class=\"o\">=(</span>git zsh-autosuggestions<span class=\"o\">)</span></code></pre></figure>\n\n<hr />\n\n<p><strong>5. Organising aliases</strong></p>\n\n<p>If you have your aliases already setup in bash or other shell, you can just copy them directly to your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>, or place them in a file with <code class=\"language-plaintext highlighter-rouge\">.zsh</code> extension in the <code class=\"language-plaintext highlighter-rouge\">~/.oh-my-zsh/custom/</code> directory. The latter looks more organised in my opinion.</p>\n\n<hr />\n\n<p><strong>6. Add Conda setup</strong></p>\n\n<p>If you’re like me and you’re using Conda for your jupyter notebook, you need to make sure that you put the following script into your <code class=\"language-plaintext highlighter-rouge\">.zshrc</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-zsh\" data-lang=\"zsh\"> <span class=\"o\">&gt;&gt;&gt;</span> conda initialize <span class=\"o\">&gt;&gt;&gt;</span>\n <span class=\"o\">!!</span> Contents within this block are managed by <span class=\"s1\">'conda init'</span> <span class=\"o\">!!</span>\n<span class=\"nv\">__conda_setup</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"s1\">'/Users/user/opt/anaconda3/bin/conda'</span> <span class=\"s1\">'shell.zsh'</span> <span class=\"s1\">'hook'</span> 2&gt; /dev/null<span class=\"si\">)</span><span class=\"s2\">\"</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$?</span> <span class=\"nt\">-eq</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"nv\">$__conda_setup</span><span class=\"s2\">\"</span>\n<span class=\"k\">else\n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"nb\">.</span> <span class=\"s2\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"~/opt/anaconda3/bin:</span><span class=\"nv\">$PATH</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi\nfi\n</span><span class=\"nb\">unset </span>__conda_setup\n <span class=\"o\">&lt;&lt;&lt;</span> conda initialize <span class=\"o\">&lt;&lt;&lt;</span></code></pre></figure>\n\n<p>To activate or deactivate your conda environment use the command <code class=\"language-plaintext highlighter-rouge\">conda activate</code> or <code class=\"language-plaintext highlighter-rouge\">conda deactivate</code> on your command prompt.</p>\n\n<hr />\n\n<p><strong>7. Colors for terminal</strong></p>\n\n<p>For color, I follow <a href=\"https://github.com/nathanbuchar/atom-one-dark-terminal/blob/master/COLORS\">atom one dark color</a> theme which I applied manually on my terminal preference. Here are the hex colors for both <em>One Dark</em> and <em>One Light</em> theme:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>One Dark                       One Light\n\nBlack:          1E2127        Black:          000000\nBright Black:   5C6370        Bright Black:   383A42\nRed:            E06C75        Red:            E45649\nBright Red:     E06C75        Bright Red:     E45649\nGreen:          98C379        Green:          50A14F\nBright Green:   98C379        Bright Green:   50A14F\nYellow:         D19A66        Yellow:         986801\nBright Yellow:  D19A66        Bright Yellow:  986801\nBlue:           61AFEF        Blue:           4078F2\nLight Blue:     61AFEF        Light Blue:     4078F2\nMagenta:        C678DD        Magenta:        A626A4\nLight Magenta:  C678DD        Light Magenta:  A626A4\nCyan:           56B6C2        Cyan:           0184BC\nLight Cyan:     56B6C2        Light Cyan:     0184BC\nWhite:          ABB2BF        White:          A0A1A7\nBright White:   FFFFFF        Bright White:   FFFFFF\nText:           ABB2BF        Text:           383A42\nBold Text:      ABB2BF        Bold Text:      A0A1A7\nSelection:      3A3F4B        Selection:      3A3F4B\nCursor:         5C6370        Cursor:         383A42\nBackground:     1E2127        Background:     F9F9F9\n</code></pre></div></div>\n\n<p>The background color I used also follows the One Dark black color which hex is <code class=\"language-plaintext highlighter-rouge\">1E2127</code>. You can change it to <code class=\"language-plaintext highlighter-rouge\">FEFDF9</code> or <code class=\"language-plaintext highlighter-rouge\">FEF4EB</code> if you want a peach colored background.</p>\n\n<hr />\n\n<p>References</p>\n<ul>\n  <li><a href=\"https://github.com/ohmyzsh/ohmyzsh\">Oh-my-zsh</a></li>\n  <li><a href=\"https://denysdovhan.com/spaceship-prompt/\">Spaceship ZSH prompt</a></li>\n  <li><a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\">Zsh-syntax-highlighting</a></li>\n  <li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">Zsh-syntax-autosuggestion</a></li>\n  <li><a href=\"https://github.com/tonsky/FiraCode\">FiraCode font</a></li>\n  <li><a href=\"https://github.com/nathanbuchar/atom-one-dark-terminal\">Atom one dark for terminal</a></li>\n</ul>\n\n<hr />","excerpt":"MacOSX Catalina 15.5 update changed the Terminal emulator default shell from bash to zsh and I figure it’s the right time to get to know zsh. Here’s how I setup my zsh after doing a quick search on the web.","languages":null,"categories":["news"],"tags":["comp"]},{"title":"Air Medical Evacuation","permalink":"https://ezral.net/air-medical-evacuation.html","link":"https://ezral.net/air-medical-evacuation.html","date":"2020-06-22T00:00:00+00:00","modified":"2020-06-27T16:38:42+00:00","author":{"name":"Ezral","url":"https://ezral.net/","email":"a@ezral.net"},"content":"<p>Although the term <strong>air medical evacuation</strong> covers many things¹, it’s most commonly known in Indonesia as air ambulance evacuation using privately chartered airplane with a special configuration. If you’re fortunate enough, you’d have enough fortune to spend to fly you to a center of medical excellence using this option.</p>\n\n<blockquote>\n  <p>¹ All means of air-lifting patient (rotary &amp; fixed wings) that includes commercial seated, commercial stretcher, air ambulance.</p>\n</blockquote>\n\n<p>Is it popular? It is an option for the wealthy and lucky few. The cost² can easily pays off your car instalments or your kid’s tuition.</p>\n\n<blockquote>\n  <p>² Air ambulance cost for Jakarta to Singapore sector between the year 2016 – 2017 can vary from USD <strong>13,000</strong> to <strong>26,000</strong> depending on complexity of medical condition, aircraft type, and origin of aircraft.</p>\n</blockquote>\n\n<hr />","excerpt":"Although the term air medical evacuation covers many things¹, it’s most commonly known in Indonesia as air ambulance evacuation using privately chartered airplane with a special configuration. If you’re fortunate enough, you’d have enough fortune to spend to fly you to a center of medical excellence using this option.","languages":null,"categories":["news"],"tags":["misc"]}]